name: Build CI

on:
  push:
    branches: [ master ]

env:
  WARN_ON_PR: "artifact upload is disabled due to the workflow is trigged by pull request."

jobs:
  gradle:
    name: Gradle CI Build
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
      name: Clone repository

    - name: Prepare Java 15
      uses: actions/setup-java@v1
      with:
        java-version: 15
        java-package: jdk+fx

    - name: Cache Gradle packages
      uses: actions/cache@v2
      with:
        path: ~/.gradle/caches
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
        restore-keys: ${{ runner.os }}-gradle

    - name: Build project
      run: |
        if ${{ !!github.head_ref }}; then echo "::warning:: Gradle $WARN_ON_PR"; fi
        git submodule init
        git submodule update
        ./gradlew :app:assembleRelease
    
    - name: Sign APK
      uses: r0adkll/sign-android-release@v1
      id: sign_app
      with:
        releaseDirectory: app/build/outputs/apk/release
        signingKeyBase64: ${{ secrets.SIGN_FILE_BASE64 }}
        alias: ${{ secrets.SIGN_ALIAS }}
        keyStorePassword: ${{ secrets.SIGN_KEYSTORE_PASSWORD }}
        keyPassword: ${{ secrets.SIGN_KEY_PASSWORD }}
    - name: Get Apk Info
      id: apk
      uses: JantHsueh/get-apk-info-action@master
      with:
        apkPath: ${{steps.sign_app.outputs.signedReleaseFile}}
    - name: Github Release
      uses: actions/create-release@v1
      id: create_release
      env:
        GITHUB_TOKEN: ${{ secrets.PAT }}
      with:
          tag_name: ${{steps.apk.outputs.versionCode}}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: true
    - name: Upload Release Asset
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: ${{steps.sign_app.outputs.signedReleaseFile}}
        asset_name: release.apk
        asset_content_type: application/zip
